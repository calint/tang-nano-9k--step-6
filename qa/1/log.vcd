$date
	Thu Jun  6 20:22:12 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module TestBench $end
$var wire 1 ! data_out_ready $end
$var wire 32 " data_out [31:0] $end
$var wire 64 # br_wr_data [63:0] $end
$var wire 1 $ br_rd_data_ready $end
$var wire 64 % br_rd_data [63:0] $end
$var wire 8 & br_data_mask [7:0] $end
$var wire 1 ' br_cmd_en $end
$var wire 1 ( br_cmd $end
$var wire 1 ) br_busy $end
$var wire 4 * br_addr [3:0] $end
$var parameter 32 + BURST_RAM_DEPTH_BITWIDTH $end
$var parameter 32 , clk_tk $end
$var reg 32 - address [31:0] $end
$var reg 1 . clk $end
$var reg 32 / data_in [31:0] $end
$var reg 1 0 sys_rst_n $end
$var reg 4 1 write_enable [3:0] $end
$var integer 32 2 i [31:0] $end
$scope module burst_ram $end
$var wire 1 . clk $end
$var wire 1 3 rst $end
$var wire 64 4 wr_data [63:0] $end
$var wire 8 5 data_mask [7:0] $end
$var wire 1 ' cmd_en $end
$var wire 1 ( cmd $end
$var wire 4 6 addr [3:0] $end
$var parameter 32 7 BURST_COUNT $end
$var parameter 32 8 CMD_READ $end
$var parameter 32 9 CMD_WRITE $end
$var parameter 32 : CYCLES_BEFORE_DATA_VALID $end
$var parameter 32 ; CYCLES_BEFORE_INITIATED $end
$var parameter 32 < DATA_BITWIDTH $end
$var parameter 56 = DATA_FILE $end
$var parameter 32 > DEPTH $end
$var parameter 32 ? DEPTH_BITWIDTH $end
$var parameter 5 @ STATE_IDLE $end
$var parameter 5 A STATE_INITIATE $end
$var parameter 5 B STATE_READ_BURST $end
$var parameter 5 C STATE_READ_DELAY $end
$var parameter 5 D STATE_WRITE_BURST $end
$var reg 16 E addr_counter [15:0] $end
$var reg 2 F burst_counter [1:0] $end
$var reg 1 ) busy $end
$var reg 5 G init_calib_delay_counter [4:0] $end
$var reg 64 H rd_data [63:0] $end
$var reg 1 $ rd_data_ready $end
$var reg 4 I read_delay_counter [3:0] $end
$var reg 5 J state [4:0] $end
$scope task set_new_state_after_command_done $end
$upscope $end
$upscope $end
$scope module cache $end
$var wire 32 K address [31:0] $end
$var wire 1 ) br_busy $end
$var wire 64 L br_rd_data [63:0] $end
$var wire 1 $ br_rd_data_ready $end
$var wire 1 M busy $end
$var wire 1 N cache_line_hit $end
$var wire 1 . clk $end
$var wire 32 O data_in [31:0] $end
$var wire 1 P rst $end
$var wire 4 Q write_enable [3:0] $end
$var wire 1 R line_valid $end
$var wire 17 S line_tag_in [16:0] $end
$var wire 32 T line_tag_and_valid_dirty [31:0] $end
$var wire 17 U line_tag [16:0] $end
$var wire 10 V line_ix [9:0] $end
$var wire 1 W line_dirty $end
$var wire 32 X data7_out [31:0] $end
$var wire 32 Y data6_out [31:0] $end
$var wire 32 Z data5_out [31:0] $end
$var wire 32 [ data4_out [31:0] $end
$var wire 32 \ data3_out [31:0] $end
$var wire 32 ] data2_out [31:0] $end
$var wire 32 ^ data1_out [31:0] $end
$var wire 32 _ data0_out [31:0] $end
$var wire 3 ` column_ix [2:0] $end
$var wire 4 a burst_ram_cache_line_address [3:0] $end
$var parameter 32 b BURST_RAM_DEPTH_BITWIDTH $end
$var parameter 32 c COLUMN_IX_BITWIDTH $end
$var parameter 32 d LINE_COUNT $end
$var parameter 36 e LINE_DIRTY_BIT $end
$var parameter 32 f LINE_IX_BITWIDTH $end
$var parameter 35 g LINE_VALID_BIT $end
$var parameter 8 h STATE_FETCH_READ_1 $end
$var parameter 8 i STATE_FETCH_READ_2 $end
$var parameter 8 j STATE_FETCH_READ_3 $end
$var parameter 8 k STATE_FETCH_READ_FINISH $end
$var parameter 8 l STATE_FETCH_WAIT_FOR_DATA_READY $end
$var parameter 8 m STATE_IDLE $end
$var parameter 35 n TAG_BITWIDTH $end
$var parameter 32 o ZEROS_BITWIDTH $end
$var reg 4 p br_addr [3:0] $end
$var reg 1 ( br_cmd $end
$var reg 1 ' br_cmd_en $end
$var reg 8 q br_data_mask [7:0] $end
$var reg 64 r br_wr_data [63:0] $end
$var reg 1 s burst_fetching $end
$var reg 4 t burst_write_enable_0 [3:0] $end
$var reg 4 u burst_write_enable_1 [3:0] $end
$var reg 4 v burst_write_enable_2 [3:0] $end
$var reg 4 w burst_write_enable_3 [3:0] $end
$var reg 4 x burst_write_enable_4 [3:0] $end
$var reg 4 y burst_write_enable_5 [3:0] $end
$var reg 4 z burst_write_enable_6 [3:0] $end
$var reg 4 { burst_write_enable_7 [3:0] $end
$var reg 4 | burst_write_enable_tag [3:0] $end
$var reg 1 } burst_writing $end
$var reg 32 ~ data_in_0 [31:0] $end
$var reg 32 !" data_in_1 [31:0] $end
$var reg 32 "" data_in_2 [31:0] $end
$var reg 32 #" data_in_3 [31:0] $end
$var reg 32 $" data_in_4 [31:0] $end
$var reg 32 %" data_in_5 [31:0] $end
$var reg 32 &" data_in_6 [31:0] $end
$var reg 32 '" data_in_7 [31:0] $end
$var reg 32 (" data_out [31:0] $end
$var reg 1 ! data_out_ready $end
$var reg 8 )" state [7:0] $end
$var reg 4 *" write_enable_0 [3:0] $end
$var reg 4 +" write_enable_1 [3:0] $end
$var reg 4 ," write_enable_2 [3:0] $end
$var reg 4 -" write_enable_3 [3:0] $end
$var reg 4 ." write_enable_4 [3:0] $end
$var reg 4 /" write_enable_5 [3:0] $end
$var reg 4 0" write_enable_6 [3:0] $end
$var reg 4 1" write_enable_7 [3:0] $end
$var reg 4 2" write_enable_tag [3:0] $end
$scope module data0 $end
$var wire 10 3" address [9:0] $end
$var wire 1 . clk $end
$var wire 32 4" data_in [31:0] $end
$var wire 32 5" data_out [31:0] $end
$var wire 4 6" write_enable [3:0] $end
$var parameter 32 7" ADDRESS_BITWIDTH $end
$var parameter 32 8" COLUMN_BITWIDTH $end
$var parameter 32 9" COLUMN_COUNT $end
$var parameter 32 :" DATA_BITWIDTH $end
$var parameter 0 ;" DATA_FILE $end
$var integer 32 <" i [31:0] $end
$upscope $end
$scope module data1 $end
$var wire 10 =" address [9:0] $end
$var wire 1 . clk $end
$var wire 32 >" data_in [31:0] $end
$var wire 32 ?" data_out [31:0] $end
$var wire 4 @" write_enable [3:0] $end
$var parameter 32 A" ADDRESS_BITWIDTH $end
$var parameter 32 B" COLUMN_BITWIDTH $end
$var parameter 32 C" COLUMN_COUNT $end
$var parameter 32 D" DATA_BITWIDTH $end
$var parameter 0 E" DATA_FILE $end
$var integer 32 F" i [31:0] $end
$upscope $end
$scope module data2 $end
$var wire 10 G" address [9:0] $end
$var wire 1 . clk $end
$var wire 32 H" data_in [31:0] $end
$var wire 32 I" data_out [31:0] $end
$var wire 4 J" write_enable [3:0] $end
$var parameter 32 K" ADDRESS_BITWIDTH $end
$var parameter 32 L" COLUMN_BITWIDTH $end
$var parameter 32 M" COLUMN_COUNT $end
$var parameter 32 N" DATA_BITWIDTH $end
$var parameter 0 O" DATA_FILE $end
$var integer 32 P" i [31:0] $end
$upscope $end
$scope module data3 $end
$var wire 10 Q" address [9:0] $end
$var wire 1 . clk $end
$var wire 32 R" data_in [31:0] $end
$var wire 32 S" data_out [31:0] $end
$var wire 4 T" write_enable [3:0] $end
$var parameter 32 U" ADDRESS_BITWIDTH $end
$var parameter 32 V" COLUMN_BITWIDTH $end
$var parameter 32 W" COLUMN_COUNT $end
$var parameter 32 X" DATA_BITWIDTH $end
$var parameter 0 Y" DATA_FILE $end
$var integer 32 Z" i [31:0] $end
$upscope $end
$scope module data4 $end
$var wire 10 [" address [9:0] $end
$var wire 1 . clk $end
$var wire 32 \" data_in [31:0] $end
$var wire 32 ]" data_out [31:0] $end
$var wire 4 ^" write_enable [3:0] $end
$var parameter 32 _" ADDRESS_BITWIDTH $end
$var parameter 32 `" COLUMN_BITWIDTH $end
$var parameter 32 a" COLUMN_COUNT $end
$var parameter 32 b" DATA_BITWIDTH $end
$var parameter 0 c" DATA_FILE $end
$var integer 32 d" i [31:0] $end
$upscope $end
$scope module data5 $end
$var wire 10 e" address [9:0] $end
$var wire 1 . clk $end
$var wire 32 f" data_in [31:0] $end
$var wire 32 g" data_out [31:0] $end
$var wire 4 h" write_enable [3:0] $end
$var parameter 32 i" ADDRESS_BITWIDTH $end
$var parameter 32 j" COLUMN_BITWIDTH $end
$var parameter 32 k" COLUMN_COUNT $end
$var parameter 32 l" DATA_BITWIDTH $end
$var parameter 0 m" DATA_FILE $end
$var integer 32 n" i [31:0] $end
$upscope $end
$scope module data6 $end
$var wire 10 o" address [9:0] $end
$var wire 1 . clk $end
$var wire 32 p" data_in [31:0] $end
$var wire 32 q" data_out [31:0] $end
$var wire 4 r" write_enable [3:0] $end
$var parameter 32 s" ADDRESS_BITWIDTH $end
$var parameter 32 t" COLUMN_BITWIDTH $end
$var parameter 32 u" COLUMN_COUNT $end
$var parameter 32 v" DATA_BITWIDTH $end
$var parameter 0 w" DATA_FILE $end
$var integer 32 x" i [31:0] $end
$upscope $end
$scope module data7 $end
$var wire 10 y" address [9:0] $end
$var wire 1 . clk $end
$var wire 32 z" data_in [31:0] $end
$var wire 32 {" data_out [31:0] $end
$var wire 4 |" write_enable [3:0] $end
$var parameter 32 }" ADDRESS_BITWIDTH $end
$var parameter 32 ~" COLUMN_BITWIDTH $end
$var parameter 32 !# COLUMN_COUNT $end
$var parameter 32 "# DATA_BITWIDTH $end
$var parameter 0 ## DATA_FILE $end
$var integer 32 $# i [31:0] $end
$upscope $end
$scope module tag $end
$var wire 10 %# address [9:0] $end
$var wire 1 . clk $end
$var wire 32 &# data_in [31:0] $end
$var wire 32 '# data_out [31:0] $end
$var wire 4 (# write_enable [3:0] $end
$var parameter 32 )# ADDRESS_BITWIDTH $end
$var parameter 32 *# COLUMN_BITWIDTH $end
$var parameter 32 +# COLUMN_COUNT $end
$var parameter 32 ,# DATA_BITWIDTH $end
$var parameter 0 -# DATA_FILE $end
$var integer 32 .# i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b -#
b100000 ,#
b100 +#
b1000 *#
b1010 )#
b ##
b100000 "#
b100 !#
b1000 ~"
b1010 }"
b w"
b100000 v"
b100 u"
b1000 t"
b1010 s"
b m"
b100000 l"
b100 k"
b1000 j"
b1010 i"
b c"
b100000 b"
b100 a"
b1000 `"
b1010 _"
b Y"
b100000 X"
b100 W"
b1000 V"
b1010 U"
b O"
b100000 N"
b100 M"
b1000 L"
b1010 K"
b E"
b100000 D"
b100 C"
b1000 B"
b1010 A"
b ;"
b100000 :"
b100 9"
b1000 8"
b1010 7"
b10 o
b10001 n
b1 m
b10 l
b100000 k
b10000 j
b1000 i
b100 h
b10001 g
b1010 f
b10010 e
b10000000000 d
b11 c
b100 b
b10000 D
b100 C
b1000 B
b1 A
b10 @
b100 ?
b10000 >
b1010010010000010100110100101110011011010110010101101101 =
b1000000 <
b1010 ;
b1000 :
b1 9
b0 8
b100 7
b100 ,
b100 +
$end
#0
$dumpvars
b100 .#
b0 (#
bx '#
b1xxxxxxxxxxxxxxxxx &#
bx %#
b100 $#
b0 |"
bx {"
bx z"
bx y"
b100 x"
b0 r"
bx q"
bx p"
bx o"
b100 n"
b0 h"
bx g"
bx f"
bx e"
b100 d"
b0 ^"
bx ]"
bx \"
bx ["
b100 Z"
b0 T"
bx S"
bx R"
bx Q"
b100 P"
b0 J"
bx I"
bx H"
bx G"
b100 F"
b0 @"
bx ?"
bx >"
bx ="
b100 <"
b0 6"
bx 5"
bx 4"
bx 3"
b0 2"
b0 1"
b0 0"
b0 /"
b0 ."
b0 -"
b0 ,"
b0 +"
b0 *"
b1 )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
0}
b0 |
b0 {
b0 z
b0 y
b0 x
b0 w
b0 v
b0 u
b0 t
0s
bx r
b1111 q
bx p
bx00 a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
xW
bx V
bx U
bx T
bx S
xR
bx Q
1P
bx O
xN
0M
b0 L
bx K
b1 J
bx I
b0 H
b0 G
bx F
bx E
bx 6
b1111 5
bx 4
13
b10000000000 2
bx 1
00
bx /
1.
bx -
bx *
1)
x(
x'
b1111 &
b0 %
0$
bx #
bx "
0!
$end
#2000
0.
#4000
03
0P
10
b100 $#
b100 x"
b100 n"
b100 d"
b100 Z"
b100 P"
b100 F"
b100 <"
b100 .#
1.
#6000
0.
#8000
b1 G
b100 .#
b100 <"
b100 F"
b100 P"
b100 Z"
b100 d"
b100 n"
b100 x"
b100 $#
1.
#10000
0.
#12000
b10 G
b100 $#
b100 x"
b100 n"
b100 d"
b100 Z"
b100 P"
b100 F"
b100 <"
b100 .#
1.
#14000
0.
#16000
b11 G
b100 .#
b100 <"
b100 F"
b100 P"
b100 Z"
b100 d"
b100 n"
b100 x"
b100 $#
1.
#18000
0.
#20000
b100 G
b100 $#
b100 x"
b100 n"
b100 d"
b100 Z"
b100 P"
b100 F"
b100 <"
b100 .#
1.
#22000
0.
#24000
b101 G
b100 .#
b100 <"
b100 F"
b100 P"
b100 Z"
b100 d"
b100 n"
b100 x"
b100 $#
1.
#26000
0.
#28000
b110 G
b100 $#
b100 x"
b100 n"
b100 d"
b100 Z"
b100 P"
b100 F"
b100 <"
b100 .#
1.
#30000
0.
#32000
b111 G
b100 .#
b100 <"
b100 F"
b100 P"
b100 Z"
b100 d"
b100 n"
b100 x"
b100 $#
1.
#34000
0.
#36000
b1000 G
b100 $#
b100 x"
b100 n"
b100 d"
b100 Z"
b100 P"
b100 F"
b100 <"
b100 .#
1.
#38000
0.
#40000
b1001 G
b100 .#
b100 <"
b100 F"
b100 P"
b100 Z"
b100 d"
b100 n"
b100 x"
b100 $#
1.
#42000
0.
#44000
b1010 G
b100 $#
b100 x"
b100 n"
b100 d"
b100 Z"
b100 P"
b100 F"
b100 <"
b100 .#
1.
#46000
0.
#48000
b1011 G
b10 J
0)
b100 .#
b100 <"
b100 F"
b100 P"
b100 Z"
b100 d"
b100 n"
b100 x"
b100 $#
1.
#50000
0.
#52000
0N
b0 a
b0 U
0W
0R
0!
b0 "
b0 ("
b100 `
b0 _
b0 5"
b0 ^
b0 ?"
b0 ]
b0 I"
b0 \
b0 S"
b0 [
b0 ]"
b0 Z
b0 g"
b0 Y
b0 q"
b0 X
b0 {"
b0 T
b0 '#
b0 V
b0 3"
b0 ="
b0 G"
b0 Q"
b0 ["
b0 e"
b0 o"
b0 y"
b0 %#
b100000000000000000 &#
b0 S
b0 1
b0 Q
b10000 -
b10000 K
b100 $#
b100 x"
b100 n"
b100 d"
b100 Z"
b100 P"
b100 F"
b100 <"
b100 .#
1.
#54000
0.
#56000
1M
b10 )"
1s
1'
b0 *
b0 6
b0 p
0(
b100 .#
b100 <"
b100 F"
b100 P"
b100 Z"
b100 d"
b100 n"
b100 x"
b100 $#
1.
#58000
0.
#60000
0'
b100 J
b0 E
b0 I
b0 F
1)
b100 $#
b100 x"
b100 n"
b100 d"
b100 Z"
b100 P"
b100 F"
b100 <"
b100 .#
1.
#62000
0.
#64000
b1 I
b100 .#
b100 <"
b100 F"
b100 P"
b100 Z"
b100 d"
b100 n"
b100 x"
b100 $#
1.
#66000
0.
#68000
b10 I
b100 $#
b100 x"
b100 n"
b100 d"
b100 Z"
b100 P"
b100 F"
b100 <"
b100 .#
1.
#70000
0.
#72000
b11 I
b100 .#
b100 <"
b100 F"
b100 P"
b100 Z"
b100 d"
b100 n"
b100 x"
b100 $#
1.
#74000
0.
#76000
b100 I
b100 $#
b100 x"
b100 n"
b100 d"
b100 Z"
b100 P"
b100 F"
b100 <"
b100 .#
1.
#78000
0.
#80000
b101 I
b100 .#
b100 <"
b100 F"
b100 P"
b100 Z"
b100 d"
b100 n"
b100 x"
b100 $#
1.
#82000
0.
#84000
b110 I
b100 $#
b100 x"
b100 n"
b100 d"
b100 Z"
b100 P"
b100 F"
b100 <"
b100 .#
1.
#86000
0.
#88000
b111 I
b100 .#
b100 <"
b100 F"
b100 P"
b100 Z"
b100 d"
b100 n"
b100 x"
b100 $#
1.
#90000
0.
#92000
b1000 I
b1000 J
b1 E
b11111101011010001011100001010010110111110001101010100110000000 %
b11111101011010001011100001010010110111110001101010100110000000 H
b11111101011010001011100001010010110111110001101010100110000000 L
1$
b100 $#
b100 x"
b100 n"
b100 d"
b100 Z"
b100 P"
b100 F"
b100 <"
b100 .#
1.
#94000
0.
#96000
b1111 +"
b1111 @"
b1111 *"
b1111 6"
b1001110110001110001011110001011110101011010011000011111001101111 %
b1001110110001110001011110001011110101011010011000011111001101111 H
b1001110110001110001011110001011110101011010011000011111001101111 L
b10 E
b1 F
b100 )"
b111111010110100010111000010100 !"
b111111010110100010111000010100 >"
b1111 u
b10110111110001101010100110000000 ~
b10110111110001101010100110000000 4"
b1111 t
b100 .#
b100 <"
b100 F"
b100 P"
b100 Z"
b100 d"
b100 n"
b100 x"
b100 $#
1.
#98000
0.
#100000
b1111 -"
b1111 T"
b1111 ,"
b1111 J"
b0 +"
b0 @"
b0 *"
b0 6"
b1000 )"
b10011101100011100010111100010111 #"
b10011101100011100010111100010111 R"
b1111 w
b10101011010011000011111001101111 ""
b10101011010011000011111001101111 H"
b1111 v
b0 u
b0 t
b111111010110100010111000010100 ^
b111111010110100010111000010100 ?"
b10110111110001101010100110000000 _
b10110111110001101010100110000000 5"
b1010000111000011111101111110001011010101101110001010100111000100 %
b1010000111000011111101111110001011010101101110001010100111000100 H
b1010000111000011111101111110001011010101101110001010100111000100 L
b11 E
b10 F
b100 $#
b100 x"
b100 n"
b100 d"
b100 Z"
b100 P"
b100 F"
b100 <"
b100 .#
1.
#102000
0.
#104000
b1111 /"
b1111 h"
b1111 ."
b1111 ^"
b0 -"
b0 T"
b0 ,"
b0 J"
b111110101001110100111110010110000011011011010100011110110001111 %
b111110101001110100111110010110000011011011010100011110110001111 H
b111110101001110100111110010110000011011011010100011110110001111 L
b100 E
b11 F
b10101011010011000011111001101111 ]
b10101011010011000011111001101111 I"
b10011101100011100010111100010111 \
b10011101100011100010111100010111 S"
b10000 )"
b10100001110000111111011111100010 %"
b10100001110000111111011111100010 f"
b1111 y
b11010101101110001010100111000100 $"
b11010101101110001010100111000100 \"
b1111 x
b0 w
b0 v
b100 .#
b100 <"
b100 F"
b100 P"
b100 Z"
b100 d"
b100 n"
b100 x"
b100 $#
1.
#106000
0.
#108000
b1111 1"
b1111 |"
b1111 0"
b1111 r"
b1111 2"
b1111 (#
b0 /"
b0 h"
b0 ."
b0 ^"
b11010101101110001010100111000100 "
b11010101101110001010100111000100 ("
b10 J
0)
b100000 )"
b1111 |
b1111101010011101001111100101100 '"
b1111101010011101001111100101100 z"
b1111 {
b11011011010100011110110001111 &"
b11011011010100011110110001111 p"
b1111 z
b0 y
b0 x
b10100001110000111111011111100010 Z
b10100001110000111111011111100010 g"
b11010101101110001010100111000100 [
b11010101101110001010100111000100 ]"
0$
b101 E
b0 F
b100 $#
b100 x"
b100 n"
b100 d"
b100 Z"
b100 P"
b100 F"
b100 <"
b100 .#
1.
#110000
0.
#112000
1!
1N
1R
0M
b0 1"
b0 |"
b0 0"
b0 r"
b0 2"
b0 (#
b100000000000000000 T
b100000000000000000 '#
b11011011010100011110110001111 Y
b11011011010100011110110001111 q"
b1111101010011101001111100101100 X
b1111101010011101001111100101100 {"
b1 )"
0s
b0 |
b0 {
b0 z
b100 .#
b100 <"
b100 F"
b100 P"
b100 Z"
b100 d"
b100 n"
b100 x"
b100 $#
1.
#114000
0.
#116000
1!
b10101011010011000011111001101111 "
b10101011010011000011111001101111 ("
b10 `
b1000 -
b1000 K
b100 $#
b100 x"
b100 n"
b100 d"
b100 Z"
b100 P"
b100 F"
b100 <"
b100 .#
1.
#118000
0.
#120000
0N
b100 a
0!
b0 "
b0 ("
0R
b0 `
b0 _
b0 5"
b0 ^
b0 ?"
b0 ]
b0 I"
b0 \
b0 S"
b0 [
b0 ]"
b0 Z
b0 g"
b0 Y
b0 q"
b0 X
b0 {"
b0 T
b0 '#
b1 V
b1 3"
b1 ="
b1 G"
b1 Q"
b1 ["
b1 e"
b1 o"
b1 y"
b1 %#
b100000 -
b100000 K
b100 .#
b100 <"
b100 F"
b100 P"
b100 Z"
b100 d"
b100 n"
b100 x"
b100 $#
1.
#122000
0.
#124000
1M
b10 )"
1s
1'
b100 *
b100 6
b100 p
b100 $#
b100 x"
b100 n"
b100 d"
b100 Z"
b100 P"
b100 F"
b100 <"
b100 .#
1.
#126000
0.
#128000
0'
b100 J
b100 E
b0 I
1)
b100 .#
b100 <"
b100 F"
b100 P"
b100 Z"
b100 d"
b100 n"
b100 x"
b100 $#
1.
#130000
0.
#132000
b1 I
b100 $#
b100 x"
b100 n"
b100 d"
b100 Z"
b100 P"
b100 F"
b100 <"
b100 .#
1.
#134000
0.
#136000
b10 I
b100 .#
b100 <"
b100 F"
b100 P"
b100 Z"
b100 d"
b100 n"
b100 x"
b100 $#
1.
#138000
0.
#140000
b11 I
b100 $#
b100 x"
b100 n"
b100 d"
b100 Z"
b100 P"
b100 F"
b100 <"
b100 .#
1.
#142000
0.
#144000
b100 I
b100 .#
b100 <"
b100 F"
b100 P"
b100 Z"
b100 d"
b100 n"
b100 x"
b100 $#
1.
#146000
0.
#148000
b101 I
b100 $#
b100 x"
b100 n"
b100 d"
b100 Z"
b100 P"
b100 F"
b100 <"
b100 .#
1.
#150000
0.
#152000
b110 I
b100 .#
b100 <"
b100 F"
b100 P"
b100 Z"
b100 d"
b100 n"
b100 x"
b100 $#
1.
#154000
0.
#156000
b111 I
b100 $#
b100 x"
b100 n"
b100 d"
b100 Z"
b100 P"
b100 F"
b100 <"
b100 .#
1.
#158000
0.
#160000
b1000 I
b1000 J
b101 E
b110110001001011100110101000110100101111010111100011110001111010 %
b110110001001011100110101000110100101111010111100011110001111010 H
b110110001001011100110101000110100101111010111100011110001111010 L
1$
b100 .#
b100 <"
b100 F"
b100 P"
b100 Z"
b100 d"
b100 n"
b100 x"
b100 $#
1.
#162000
0.
#164000
b1111 +"
b1111 @"
b1111 *"
b1111 6"
b1110000110100111110100001011010111001000111100111110011010101001 %
b1110000110100111110100001011010111001000111100111110011010101001 H
b1110000110100111110100001011010111001000111100111110011010101001 L
b110 E
b1 F
b100 )"
b1101100010010111001101010001101 !"
b1101100010010111001101010001101 >"
b1111 u
b101111010111100011110001111010 ~
b101111010111100011110001111010 4"
b1111 t
b100 $#
b100 x"
b100 n"
b100 d"
b100 Z"
b100 P"
b100 F"
b100 <"
b100 .#
1.
#166000
0.
#168000
b1111 -"
b1111 T"
b1111 ,"
b1111 J"
b0 +"
b0 @"
b0 *"
b0 6"
b101111010111100011110001111010 "
b101111010111100011110001111010 ("
b101111010111100011110001111010 _
b101111010111100011110001111010 5"
b1101100010010111001101010001101 ^
b1101100010010111001101010001101 ?"
b1000 )"
b11100001101001111101000010110101 #"
b11100001101001111101000010110101 R"
b1111 w
b11001000111100111110011010101001 ""
b11001000111100111110011010101001 H"
b1111 v
b0 u
b0 t
b1111100011101001110100101100001110110100101001011111011011100111 %
b1111100011101001110100101100001110110100101001011111011011100111 H
b1111100011101001110100101100001110110100101001011111011011100111 L
b111 E
b10 F
b100 .#
b100 <"
b100 F"
b100 P"
b100 Z"
b100 d"
b100 n"
b100 x"
b100 $#
1.
#170000
0.
#172000
b1111 /"
b1111 h"
b1111 ."
b1111 ^"
b0 -"
b0 T"
b0 ,"
b0 J"
b1101010011100111111100101100010110111000101000111101011011101001 %
b1101010011100111111100101100010110111000101000111101011011101001 H
b1101010011100111111100101100010110111000101000111101011011101001 L
b1000 E
b11 F
b10000 )"
b11111000111010011101001011000011 %"
b11111000111010011101001011000011 f"
b1111 y
b10110100101001011111011011100111 $"
b10110100101001011111011011100111 \"
b1111 x
b0 w
b0 v
b11100001101001111101000010110101 \
b11100001101001111101000010110101 S"
b11001000111100111110011010101001 ]
b11001000111100111110011010101001 I"
b100 $#
b100 x"
b100 n"
b100 d"
b100 Z"
b100 P"
b100 F"
b100 <"
b100 .#
1.
#174000
0.
#176000
b1111 1"
b1111 |"
b1111 0"
b1111 r"
b1111 2"
b1111 (#
b0 /"
b0 h"
b0 ."
b0 ^"
b10 J
0)
b10110100101001011111011011100111 [
b10110100101001011111011011100111 ]"
b11111000111010011101001011000011 Z
b11111000111010011101001011000011 g"
b100000 )"
b1111 |
b11010100111001111111001011000101 '"
b11010100111001111111001011000101 z"
b1111 {
b10111000101000111101011011101001 &"
b10111000101000111101011011101001 p"
b1111 z
b0 y
b0 x
0$
b1001 E
b0 F
b100 .#
b100 <"
b100 F"
b100 P"
b100 Z"
b100 d"
b100 n"
b100 x"
b100 $#
1.
#178000
0.
#180000
1!
1N
0M
b0 1"
b0 |"
b0 0"
b0 r"
b0 2"
b0 (#
1R
b1 )"
0s
b0 |
b0 {
b0 z
b11010100111001111111001011000101 X
b11010100111001111111001011000101 {"
b10111000101000111101011011101001 Y
b10111000101000111101011011101001 q"
b100000000000000000 T
b100000000000000000 '#
b100 $#
b100 x"
b100 n"
b100 d"
b100 Z"
b100 P"
b100 F"
b100 <"
b100 .#
1.
#182000
0.
#184000
b0 a
1!
b10011101100011100010111100010111 "
b10011101100011100010111100010111 ("
b11 `
b10110111110001101010100110000000 _
b10110111110001101010100110000000 5"
b111111010110100010111000010100 ^
b111111010110100010111000010100 ?"
b10101011010011000011111001101111 ]
b10101011010011000011111001101111 I"
b10011101100011100010111100010111 \
b10011101100011100010111100010111 S"
b11010101101110001010100111000100 [
b11010101101110001010100111000100 ]"
b10100001110000111111011111100010 Z
b10100001110000111111011111100010 g"
b11011011010100011110110001111 Y
b11011011010100011110110001111 q"
b1111101010011101001111100101100 X
b1111101010011101001111100101100 {"
b0 V
b0 3"
b0 ="
b0 G"
b0 Q"
b0 ["
b0 e"
b0 o"
b0 y"
b0 %#
b1100 -
b1100 K
b100 .#
b100 <"
b100 F"
b100 P"
b100 Z"
b100 d"
b100 n"
b100 x"
b100 $#
1.
#186000
0.
#188000
b100 $#
b100 x"
b100 n"
b100 d"
b100 Z"
b100 P"
b100 F"
b100 <"
b100 .#
1.
